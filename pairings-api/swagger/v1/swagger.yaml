---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/items":
    get:
      summary: Lists items
      security:
      - bearer_auth: []
      parameters:
      - name: by_category
        in: query
        required: false
        schema:
          type: string
      - name: by_flavor_profile[]
        in: query
        items:
          type: string
        required: false
        schema:
          type: array
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: visible_to
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: filters by search
        '401':
          description: unauthorized
    post:
      summary: Creates an item
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: item created
        '400':
          description: bad request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
        required: true
  "/items/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Shows an item
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: Updates an item
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '400':
          description: bad request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
    delete:
      summary: Deletes an item
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/pairings":
    get:
      summary: Lists pairings
      security:
      - bearer_auth: []
      parameters:
      - name: visible_to
        in: query
        required: false
        schema:
          type: string
      - name: by_strength
        in: query
        required: false
        schema:
          type: string
      - name: by_confidence
        in: query
        required: false
        schema:
          type: string
      - name: public_pairings
        in: query
        required: false
        schema:
          type: boolean
      - name: private_pairings
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: filters public pairings
        '401':
          description: unauthorized
    post:
      summary: Creates a pairing
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: pairing created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item1_id:
                  type: string
                item2_id:
                  type: string
                strength:
                  type: integer
                confidence_score:
                  type: number
                public:
                  type: boolean
                pairing_notes:
                  type: string
              required:
              - item1_id
  "/pairings/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Shows a pairing
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: Updates a pairing
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '400':
          description: bad request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                strength:
                  type: integer
                confidence_score:
                  type: number
                public:
                  type: boolean
                pairing_notes:
                  type: string
    delete:
      summary: Deletes a pairing
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/password":
    patch:
      summary: Updates password
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: password updated
        '400':
          description: bad request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                password_confirmation:
                  type: string
                password_challenge:
                  type: string
              required:
              - password
              - password_confirmation
  "/sign_up":
    post:
      summary: Creates a user
      parameters: []
      responses:
        '201':
          description: user created
        '400':
          description: bad request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/sign_in":
    post:
      summary: Creates a session
      parameters: []
      responses:
        '201':
          description: session created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/sign_out":
    delete:
      summary: Destroys current session
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized with invalid token
  "/sessions":
    get:
      summary: Lists all sessions
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
  "/sessions/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Shows a session
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
    delete:
      summary: Destroys a session
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized with expired session
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearer_format: JWT
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
